module Control(

input [5:0] first_inst, second_inst, first_funct, second_funct,

output reg ALUsrc1, ALUcontrol2, RegWrite1, RegWrite2, Unsigned1, Unsigned2, first_alu, second_alu, first_mul, secon_mul,
output reg [2:0] ALUcontrol1, ALUcontrol2

);
	
	
	
	always @ (*) begin
	
		RegWrite1 = 1'b0;
			
		Unsigned1 = 1'b0;
			
		ALUsrc1 = 1'b0;
			
		ALUcontrol1 = 3'b000;
			
		first_mul = 1'b0;
			
		first_alu = 1'b0;
			
			
		RegWrite2 = 1'b0;
			
	   Unsigned2 = 1'b0;
			
		ALUsrc2 = 1'b0;
			
		ALUcontrol2 = 3'b000;
			
		second_mul = 1'b0;
			
		second_alu = 1'b0;
			
			
		case (first_inst)
		
			6'b000000: begin
			
			RegWrite1 = 1'b1;
			
			first_alu = ~(secon_funct == 6'b011000);
			
			
				case (first_funct)
				
					6'b000000: ALUcontrol1 = 3'b110;
					
					6'b000010: ALUcontrol1 = 3'b111;
					
					6'b100000: ALUcontrol1 = 3'b000;
					
					6'b100001: begin 
					
						ALUcontrol1 = 3'b000;
					
						Unsigned1   = 1'b1;
						
					end
					
					6'b100010: ALUcontrol1 = 3'b001;
					
					6'b100011: begin
				
						ALUcontrol1 = 3'b001;
					
						Unsigned1   = 1'b1;
					
					end
					
					6'b100100: ALUcontrol1 = 3'b010;
					
					6'b100101: ALUcontrol1 = 3'b011;
					
					6'b100110: ALUcontrol1 = 3'b100;
					
					6'b100111: ALUcontrol1 = 3'b101;
					
					6'b011000: first_mul = 1'b1;
					
					default ;
					
				endcase
				
			end
			
			6'b001000: begin
							
				ALUsrc1     = 1'b1;
				
				RegWrite1   = 1'b1;
				
			end
			
			6'b001100: begin
			
				ALUcontrol1 = 3'b010;
				
				ALUsrc1     = 1'b1;
				
				RegWrite1   = 1'b1;
				
				Unsigned1   = 1'b1;
			
			end
			
			6'b001101: begin
			
				ALUcontrol1 = 3'b011;
				
				ALUsrc1     = 1'b1;
				
				RegWrite1   = 1'b1;
				
				Unsigned1   = 1'b1;
			
			end
			
			default ;
			
		endcase
		
		
		
		case(second_inst)
		
			6'b000000: begin
			
			RegWrite2 = 1'b1;
			
			second_alu = ~(second_funct == 6'b011000);
			
			
				case (secon_funct)
				
					6'b000000: ALUcontrol2 = 3'b110;
					
					6'b000010: ALUcontrol2 = 3'b111;
					
					6'b100000: ALUcontrol2 = 3'b000;
					
					6'b100001: begin 
					
						ALUcontrol2 = 3'b000;
					
						Unsigned2   = 1'b1;
						
					end
					
					6'b100010: ALUcontrol2 = 3'b001;
					
					6'b100011: begin
				
						ALUcontrol2 = 3'b001;
					
						Unsigned2   = 1'b1;
					
					end
					
					6'b100100: ALUcontrol2 = 3'b010;
					
					6'b100101: ALUcontrol2 = 3'b011;
					
					6'b100110: ALUcontrol2 = 3'b100;
					
					6'b100111: ALUcontrol2 = 3'b101;
					
					6'b011000: second_mul = 1'b1;
					
					default ;
					
				endcase
				
			end
			
			6'b001000: begin
							
				ALUsrc2     = 1'b1;
				
				RegWrite2   = 1'b1;
				
			end
			
			6'b001100: begin
			
				ALUcontrol2 = 3'b010;
				
				ALUsrc2     = 1'b1;
				
				RegWrite2   = 1'b1;
				
				Unsigned2   = 1'b1;
			
			end
			
			6'b001101: begin
			
				ALUcontrol2 = 3'b011;
				
				ALUsrc2     = 1'b1;
				
				RegWrite2   = 1'b1;
				
				Unsigned2   = 1'b1;
			
			end
			
			default ;
			
		endcase
		
	end
		
		
	
endmodule 

